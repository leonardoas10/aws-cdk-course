import { Stack, StackProps } from 'aws-cdk-lib';
import {
    Table,
    TableProps,
    AttributeType,
    ITable,
} from 'aws-cdk-lib/aws-dynamodb';
import { Construct } from 'constructs';
import { getSuffixFromStack } from '../shared/Utils';

/**
 * The `DataStack` class is a custom AWS CDK stack that provisions a DynamoDB table.
 *
 * This stack creates a DynamoDB table with a partition key named 'id' of type `STRING`.
 * The table's name is derived from the stack ID combined with a suffix generated by the
 * `getSuffixFromStack` utility function.
 *
 * @param scope The scope in which this stack is defined.
 * @param id The identifier for this stack.
 * @param props The properties for configuring the stack, including:
 *  - Any additional properties from `StackProps` that might be needed for configuring the stack.
 */
export class DataStack extends Stack {
    public readonly table: ITable;

    constructor(scope: Construct, id: string, { ...props }: StackProps) {
        super(scope, id, props);

        const suffix = getSuffixFromStack(this);

        this.table = new Table(this, id, {
            partitionKey: { name: 'id', type: AttributeType.STRING },
            tableName: `${id}-${suffix}`,
        } as TableProps);
    }
}
